{"version":3,"file":"static/js/113.52136fcd.chunk.js","mappings":"2RAQaA,EAAe,SAAC,GAA2B,IAAD,EAAxBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QAC/BC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,EAAG,UAAMJ,EAAN,iBAAuBE,EAAvB,oBAA0CD,EAA1C,mBAET,GAA0BI,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MACjB,GAA8BJ,EAAAA,EAAAA,UAAS,KAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KACA,GAAkCN,EAAAA,EAAAA,WAAS,GAA3C,eAAOO,EAAP,KAAkBC,EAAlB,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WACRP,EAAS,IACTQ,IAAAA,IAAUX,GAAKY,MAAK,SAAAC,GAClBV,EAASU,EAASC,WAEnB,CAACd,KAEJU,EAAAA,EAAAA,YAAU,WACQ,IAAD,IAAXF,IACFC,GAAa,GACbF,EAAU,iBAACH,QAAD,IAACA,GAAD,UAACA,EAAUW,aAAX,aAAC,EAAiBC,YAAlB,QAA0B,QAErC,CAACR,EAAD,OAAYJ,QAAZ,IAAYA,GAAZ,UAAYA,EAAUW,aAAtB,aAAY,EAAiBC,QAG9B,iCACE,SAAC,KAAD,CAAMC,GAAIX,EAASY,UAAWC,EAAAA,QAAAA,UAA9B,kCAGCjB,IACC,iBAAKgB,UAAWC,EAAAA,QAAAA,WAAhB,WACE,gBACED,UAAWC,EAAAA,QAAAA,IACXC,IACElB,EAAMmB,YAAN,UA9BK,mCA8BL,OACkBnB,EAAMmB,aADxB,UAEOC,GAETC,IAAI,GACJC,MAAO,OAET,4BACE,wBAAKtB,EAAMuB,SACX,wCAAgBvB,EAAMwB,iBACtB,sCACA,uBAAIxB,EAAMyB,YACV,oCACA,uBACGzB,EAAM0B,QAAU1B,EAAM0B,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,QAAMC,KAAK,eAKpE,iBAAKd,UAAWC,EAAAA,QAAAA,UAAhB,WACE,oDACA,2BACE,yBACE,SAAC,KAAD,CAAMF,GAAE,kBAAanB,EAAb,SAAR,qBAEF,yBACE,SAAC,KAAD,CAAMmB,GAAE,kBAAanB,EAAb,YAAR,+BAIN,0BACE,SAAC,EAAAmC,SAAD,CAAUC,UAAU,SAAC,EAAAC,OAAD,IAApB,UACE,SAAC,KAAD,a","sources":["components/Pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\nimport { Suspense, useEffect, useState } from 'react';\nimport { Link, Outlet, useParams, useLocation } from 'react-router-dom';\nimport { Loader } from 'components/Pages/Loader';\nimport movieImg from 'components/img/movie.jpg';\nimport s from 'components/Pages/Pages.module.css';\nimport PropTypes from 'prop-types';\n\nexport const MovieDetails = ({ BASE_URL, API_KEY }) => {\n  const { movieId } = useParams();\n  const URL = `${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-EN`;\n  const BASE_SRC = 'https://image.tmdb.org/t/p/w500';\n  const [movie, setMovie] = useState([]);\n  const location = useLocation();\n  const [btnBack, setBtnBack] = useState('/');\n  const [btnBackOn, setBtnBackOn] = useState(true);\n\n  useEffect(() => {\n    setMovie([]);\n    axios.get(URL).then(response => {\n      setMovie(response.data);\n    });\n  }, [URL]);\n\n  useEffect(() => {\n    if (btnBackOn) {\n      setBtnBackOn(false);\n      setBtnBack(location?.state?.from ?? '/');\n    }\n  }, [btnBackOn, location?.state?.from]);\n\n  return (\n    <>\n      <Link to={btnBack} className={s.link_back}>\n        &#129044; Go Back\n      </Link>\n      {movie && (\n        <div className={s.movieblock}>\n          <img\n            className={s.img}\n            src={\n              movie.poster_path\n                ? `${BASE_SRC}${movie.poster_path}`\n                : `${movieImg}`\n            }\n            alt=\"\"\n            width={300}\n          />\n          <div>\n            <h1>{movie.title}</h1>\n            <p>User Score: {movie.vote_average}</p>\n            <h2>Overview</h2>\n            <p>{movie.overview}</p>\n            <h2>Genres</h2>\n            <p>\n              {movie.genres && movie.genres.map(genre => genre.name).join(', ')}\n            </p>\n          </div>\n        </div>\n      )}\n      <div className={s.infoblock}>\n        <h3>Additional information</h3>\n        <ul>\n          <li>\n            <Link to={`/movies/${movieId}/cast`}>Cast</Link>\n          </li>\n          <li>\n            <Link to={`/movies/${movieId}/reviews`}> Reviews</Link>\n          </li>\n        </ul>\n      </div>\n      <div>\n        <Suspense fallback={<Loader />}>\n          <Outlet />\n        </Suspense>\n      </div>\n    </>\n  );\n};\n\nMovieDetails.propTypes = {\n  BASE_URL: PropTypes.string.isRequired,\n  API_KEY: PropTypes.string.isRequired,\n};\n"],"names":["MovieDetails","BASE_URL","API_KEY","movieId","useParams","URL","useState","movie","setMovie","location","useLocation","btnBack","setBtnBack","btnBackOn","setBtnBackOn","useEffect","axios","then","response","data","state","from","to","className","s","src","poster_path","movieImg","alt","width","title","vote_average","overview","genres","map","genre","name","join","Suspense","fallback","Loader"],"sourceRoot":""}