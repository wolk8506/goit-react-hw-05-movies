{"version":3,"file":"static/js/518.21447c52.chunk.js","mappings":"kSAQaA,EAAS,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QACjC,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCF,EAAAA,EAAAA,UAAS,IAAjD,eAAOG,EAAP,KAAqBC,EAArB,KACA,GAAoCJ,EAAAA,EAAAA,UAAS,IAA7C,eAAOK,EAAP,KAAmBC,EAAnB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAUC,EAAAA,EAAAA,MAEVC,EAAG,UAAMb,EAAN,uBAA6BK,EAA7B,oBAAqDJ,EAArD,+CAETa,EAAAA,EAAAA,YAAU,WACRR,EAAgBG,EAASM,UACxB,CAACN,EAASM,SAiCb,OAVAD,EAAAA,EAAAA,YAAU,WACa,KAAjBT,GAIJW,IAAAA,IAAUH,GAAKI,MAAK,SAAAC,GAClBV,EAAcU,EAASC,KAAKC,cAE7B,CAACP,EAAKR,KAGP,iBAAKgB,UAAWC,EAAAA,QAAAA,aAAhB,WACE,kBAAMD,UAAWC,EAAAA,QAAAA,KAAjB,WACE,kBACEC,KAAK,OACLC,YAAY,2BACZC,MAAOtB,EACPuB,SAtCiB,SAAAC,GACvBvB,EAAUuB,EAAEC,cAAcH,MAAMI,mBAuC5B,oBAAQN,KAAK,SAASO,QApCP,SAAAH,GACnBA,EAAEI,iBAEoB,KAAlB5B,EAAO6B,QAKXrB,GAAQ,kBACHF,GADE,IAELM,OAAO,SAAD,OAAWZ,MAGnBG,EAAgB,UAAD,OAAWH,IAC1BC,EAAU,KAVR6B,EAAAA,GAAAA,KAAW,uCAgCT,WACE,SAAC,MAAD,KACA,4CAGJ,eAAIZ,UAAWC,EAAAA,QAAAA,WAAf,SACGf,GACCA,EAAW2B,KAAI,SAAAC,GAAC,OACd,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAEE,IAAMC,MAAO,CAAEC,KAAM9B,GAA5C,SACG0B,EAAEK,SAFEL,EAAEE","sources":["components/Pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\nimport { ImSearch } from 'react-icons/im';\nimport { toast } from 'react-toastify';\nimport s from 'components/Pages/Pages.module.css';\nimport PropTypes from 'prop-types';\n\nexport const Movies = ({ BASE_URL, API_KEY }) => {\n  const [movies, setMovies] = useState('');\n  const [searchMovies, setSearchMovies] = useState('');\n  const [queryMovie, setQueryMovie] = useState('');\n  const location = useLocation();\n  const history = useNavigate();\n\n  const URL = `${BASE_URL}search/movie${searchMovies}&api_key=${API_KEY}&language=en-EN&page=1&include_adult=false`;\n\n  useEffect(() => {\n    setSearchMovies(location.search);\n  }, [location.search]);\n\n  const handleNameChange = e => {\n    setMovies(e.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (movies.trim() === '') {\n      toast.warn('There is nothing for this request!');\n      return;\n    }\n\n    history({\n      ...location,\n      search: `query=${movies}`,\n    });\n\n    setSearchMovies(`?query=${movies}`);\n    setMovies('');\n  };\n\n  useEffect(() => {\n    if (searchMovies === '') {\n      return;\n    }\n\n    axios.get(URL).then(response => {\n      setQueryMovie(response.data.results);\n    });\n  }, [URL, searchMovies]);\n\n  return (\n    <div className={s.movies_block}>\n      <form className={s.form}>\n        <input\n          type=\"text\"\n          placeholder=\"Search images and photos\"\n          value={movies}\n          onChange={handleNameChange}\n        />\n        <button type=\"submit\" onClick={handleSubmit}>\n          <ImSearch />\n          <span>Search</span>\n        </button>\n      </form>\n      <ul className={s.moviesList}>\n        {queryMovie &&\n          queryMovie.map(m => (\n            <li key={m.id}>\n              <Link to={`/movies/${m.id}`} state={{ from: location }}>\n                {m.title}\n              </Link>\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n};\n\nMovies.propTypes = {\n  BASE_URL: PropTypes.string.isRequired,\n  API_KEY: PropTypes.string.isRequired,\n  // onClick: PropTypes.func.isRequired,\n};\n"],"names":["Movies","BASE_URL","API_KEY","useState","movies","setMovies","searchMovies","setSearchMovies","queryMovie","setQueryMovie","location","useLocation","history","useNavigate","URL","useEffect","search","axios","then","response","data","results","className","s","type","placeholder","value","onChange","e","currentTarget","toLowerCase","onClick","preventDefault","trim","toast","map","m","to","id","state","from","title"],"sourceRoot":""}