{"version":3,"file":"static/js/888.d5346569.chunk.js","mappings":"gQAKaA,EAAO,WAClB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACMC,EAAG,6CAAyCL,EAAzC,oEAST,OANAM,EAAAA,EAAAA,YAAU,WACRF,EAAW,IACXG,IAAAA,IAAUF,GAAKG,MAAK,SAAAC,GAClBL,EAAWK,EAASC,KAAKC,WAE1B,CAACN,IAEFF,GACAA,EAAQS,KAAI,SAAAC,GAAC,OACX,4BACE,wBAAKA,EAAEC,QACP,uBAAID,EAAEE,aACN,gBACEC,IAAKH,EAAEI,aAAF,UAfI,mCAeJ,OAA+BJ,EAAEI,cAAjC,UAAqDC,GAC1DC,IAAKN,EAAEC,KACPM,MAAO,QANDP,EAAEQ,S,kKCnBlB,EAA6B,iCAA7B,EAAoE,0BAApE,EAA0G,gCAA1G,EAAsJ,gC,SCOzIC,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACrBvB,GAAYC,EAAAA,EAAAA,MAAZD,QAIFK,EAAG,UAFQ,gCAER,iBAAuBL,EAAvB,oBADO,mCACP,mBAET,GAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOsB,EAAP,KAAcC,EAAd,KAUA,OARAnB,EAAAA,EAAAA,YAAU,WACRmB,EAAS,IACTlB,IAAAA,IAAUF,GAAKG,MAAK,SAAAC,GAClBgB,EAAShB,EAASC,WAGnB,CAACL,KAGF,iCACE,SAAC,KAAD,CAAMqB,GAAIH,EAASI,UAAWC,EAA9B,+BAGCJ,IACC,iBAAKG,UAAWC,EAAhB,WACE,gBACED,UAAWC,EACXZ,IACEQ,EAAMK,YAAN,UArBK,mCAqBL,OACkBL,EAAMK,aADxB,UAEOC,GAETX,IAAI,GACJC,MAAO,OAET,4BACE,wBAAKI,EAAMO,SACX,wCAAgBP,EAAMQ,iBACtB,sCACA,uBAAIR,EAAMS,YACV,oCACA,uBACGT,EAAMU,QAAUV,EAAMU,OAAOtB,KAAI,SAAAuB,GAAK,OAAIA,EAAMrB,QAAMsB,KAAK,eAKpE,iBAAKT,UAAWC,EAAhB,WACE,oDACA,2BACE,yBACE,SAAC,KAAD,CAAMF,GAAE,kBAAa1B,EAAb,SAAR,qBAEF,yBACE,SAAC,KAAD,CAAM0B,GAAE,kBAAa1B,EAAb,YAAR,+BAIN,0BACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAOqC,KAAK,OAAOC,SAAS,SAACvC,EAAAA,KAAD,OAC5B,SAAC,KAAD,CAAOsC,KAAK,UAAUC,SAAS,SAACC,EAAAA,QAAD,gB,8HC/D5BA,EAAU,WACrB,IAAQvC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOsC,EAAP,KAAkBC,EAAlB,KACMpC,EAAG,6CAAyCL,EAAzC,2EAYT,OAXAM,EAAAA,EAAAA,YAAU,WACRF,EAAW,IACXqC,GAAa,GACblC,IAAAA,IAAUF,GAAKG,MAAK,SAAAC,GAClBL,EAAWK,EAASC,KAAKgC,SACY,IAAjCjC,EAASC,KAAKgC,QAAQC,QACxBF,GAAa,QAIhB,CAACpC,KAEF,gCACGmC,IAAa,qEACbrC,GACCA,EAAQS,KAAI,SAAAC,GAAC,OACX,4BACE,wBAAKA,EAAE+B,UACP,uBAAI/B,EAAEgC,YAFEhC,EAAE+B,gB","sources":["components/Cast/Cast.jsx","webpack://react-homework-template/./src/components/MovieDetails/MovieDetails.module.css?9ca9","components/MovieDetails/MovieDetails.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport person from 'components/Reviews/person.png';\n\nexport const Cast = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const URL = `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=a8df323e9ca157a6f58df54190ee006c&language=en-US`;\n  const BASE_SRC = 'https://image.tmdb.org/t/p/w500';\n\n  useEffect(() => {\n    setReviews([]);\n    axios.get(URL).then(response => {\n      setReviews(response.data.cast);\n    });\n  }, [URL]);\n  return (\n    reviews &&\n    reviews.map(c => (\n      <div key={c.id}>\n        <h3>{c.name}</h3>\n        <p>{c.character}</p>\n        <img\n          src={c.profile_path ? `${BASE_SRC}${c.profile_path}` : `${person}`}\n          alt={c.name}\n          width={200}\n        />\n      </div>\n    ))\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"movieblock\":\"MovieDetails_movieblock__goltj\",\"img\":\"MovieDetails_img__D3WH9\",\"link_back\":\"MovieDetails_link_back__nkHTL\",\"infoblock\":\"MovieDetails_infoblock__AaKqQ\"};","import axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { Link, Route, Routes, useParams } from 'react-router-dom';\nimport { Cast } from 'components/Cast/Cast';\nimport { Reviews } from 'components/Reviews/Reviews';\nimport movieImg from 'components/MovieDetails/movie.jpg';\nimport s from 'components/MovieDetails/MovieDetails.module.css';\n\nexport const MovieDatails = ({ btnBack }) => {\n  const { movieId } = useParams();\n  // console.log(movieId);\n  const BASE_URL = 'https://api.themoviedb.org/3/';\n  const API_KEY = 'a8df323e9ca157a6f58df54190ee006c';\n  const URL = `${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-EN`;\n  const BASE_SRC = 'https://image.tmdb.org/t/p/w500';\n  const [movie, setMovie] = useState([]);\n\n  useEffect(() => {\n    setMovie([]);\n    axios.get(URL).then(response => {\n      setMovie(response.data);\n      // console.log(response);\n    });\n  }, [URL]);\n\n  return (\n    <>\n      <Link to={btnBack} className={s.link_back}>\n        &#129044; Back\n      </Link>\n      {movie && (\n        <div className={s.movieblock}>\n          <img\n            className={s.img}\n            src={\n              movie.poster_path\n                ? `${BASE_SRC}${movie.poster_path}`\n                : `${movieImg}`\n            }\n            alt=\"\"\n            width={300}\n          />\n          <div>\n            <h1>{movie.title}</h1>\n            <p>User Score: {movie.vote_average}</p>\n            <h2>Overview</h2>\n            <p>{movie.overview}</p>\n            <h2>Genres</h2>\n            <p>\n              {movie.genres && movie.genres.map(genre => genre.name).join(', ')}\n            </p>\n          </div>\n        </div>\n      )}\n      <div className={s.infoblock}>\n        <h3>Additional information</h3>\n        <ul>\n          <li>\n            <Link to={`/movies/${movieId}/cast`}>Cast</Link>\n          </li>\n          <li>\n            <Link to={`/movies/${movieId}/reviews`}> Reviews</Link>\n          </li>\n        </ul>\n      </div>\n      <div>\n        <Routes>\n          <Route path=\"cast\" element={<Cast />} />\n          <Route path=\"reviews\" element={<Reviews />} />\n        </Routes>\n      </div>\n    </>\n  );\n};\n","import axios from 'axios';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nexport const Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [noReviews, setNoReviews] = useState(false);\n  const URL = `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=a8df323e9ca157a6f58df54190ee006c&language=en-US&page=1`;\n  useEffect(() => {\n    setReviews([]);\n    setNoReviews(false);\n    axios.get(URL).then(response => {\n      setReviews(response.data.results);\n      if (response.data.results.length === 0) {\n        setNoReviews(true);\n      }\n      // console.log(response.data.results.length === 0);\n    });\n  }, [URL]);\n  return (\n    <>\n      {noReviews && <p>We don't have any reviews for this movie.</p>}\n      {reviews &&\n        reviews.map(c => (\n          <div key={c.author}>\n            <h3>{c.author}</h3>\n            <p>{c.content}</p>\n          </div>\n        ))}\n    </>\n  );\n};\n"],"names":["Cast","movieId","useParams","useState","reviews","setReviews","URL","useEffect","axios","then","response","data","cast","map","c","name","character","src","profile_path","person","alt","width","id","MovieDatails","btnBack","movie","setMovie","to","className","s","poster_path","movieImg","title","vote_average","overview","genres","genre","join","path","element","Reviews","noReviews","setNoReviews","results","length","author","content"],"sourceRoot":""}